#!/usr/bin/python -tt

"""
This script encapsulates the way we usually link our typical jenkins
rpm-building workflow with the build-srpm-from-scm script.
"""

import argparse
import datetime
import os.path
import pipes
import subprocess
import sys


OUTPUT_DIR = 'temp/srpm'

BUILD_SRPM_FROM_SCM = os.path.join(os.path.dirname(sys.argv[0]), '..',
                                   'rpmfab', 'build-srpm-from-scm')
GET_JOB_INFO = os.path.join(os.path.dirname(sys.argv[0]), 'get-job-info')


def get_build_id():
    os.environ['GIT_DIR'] = 'src/.git'
    abbrev_commit = subprocess.check_output(('git', 'rev-parse', 'HEAD'))[:7]
    commit_count = len(subprocess.check_output(('git', 'log',
                                                '--pretty=format:', 'HEAD')))
    #commit_count = subprocess.check_output(('git', 'rev-list', '--count',
    #                                        'HEAD')).strip()
    date = datetime.datetime.now().strftime('%Y%m%d')

    if os.getenv('add_git_info') == 'true':
        fmt = '{count}.{build}.{date}git{commit}'
    else:
        fmt = '{count}.{build}'
    return fmt.format(count=commit_count, build=os.getenv('BUILD_NUMBER', 0),
                      date=date, commit=abbrev_commit)


def main():
    if not os.path.exists(OUTPUT_DIR):
        os.makedirs(OUTPUT_DIR)

    args = [BUILD_SRPM_FROM_SCM, '-w', '.', '-o', OUTPUT_DIR]

    if os.getenv('BUILD_TAG'):
        args.extend(['--mock-options',
                     '--uniqueext {0}'.format(os.getenv('BUILD_TAG'))])

    build_target = subprocess.check_output((GET_JOB_INFO, 'build-target'))
    mock_config_url = '{0}/userContent/mock/tags/{1}/rhel-7-x86_64.cfg'.format(
        os.getenv('JENKINS_URL'), build_target.strip())
    args.extend(['-c', mock_config_url])

    build_id = get_build_id()
    args.extend(['-m', 'build_id={0}'.format(get_build_id())])

    if os.getenv('TARBALL_BASEDIR'):
        args.extend(['-m', 'tarball_basedir={0}'.format(os.getenv(
            'TARBALL_BASEDIR'))])

    args.extend(sys.argv[1:])
    print 'executing', ' '.join(pipes.quote(a) for a in args)
    os.execv(BUILD_SRPM_FROM_SCM, args)


if __name__ == '__main__':
    main()
