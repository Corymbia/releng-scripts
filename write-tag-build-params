#!/usr/bin/python -tt
#
# (c) Copyright 2016 Hewlett Packard Enterprise Development Company LP
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

"""
Write a .properties file containing parameters for p2-tag-build.

This requires the JOB_NAME and BUILD_NUMBER environment variables from
Jenkins.
"""


import argparse
import os
import urllib2

import yaml


PROPERTIES_FILENAME = 'tag-params.properties'
TAG_CONFIG_FILENAME = 'tags.yml'


def main():
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('-t', '--tag', help=argparse.SUPPRESS)  # old, unused
    parser.add_argument('-j', '--job', default=os.getenv('JOB_NAME'))
    parser.add_argument('-b', '--build', default=os.getenv('BUILD_NUMBER'))
    parser.add_argument('-q', '--quiet', action='store_true')
    parser.add_argument('--jenkins-url',
                        default=os.getenv('JENKINS_URL'))
    args = parser.parse_args()
    if not args.job:
        parser.error('argument -j/--job or JOB_NAME is required')
    if not args.build:
        parser.error('argument -b/--build or BUILD_NUMBER is required')
    if not args.jenkins_url:
        parser.error('argument --jenkins-url or JENKINS_URL is required')

    url = '{url}/userContent/{tag_map}'.format(url=args.jenkins_url,
                                               tag_map=TAG_CONFIG_FILENAME)
    tag_config = yaml.safe_load(urllib2.urlopen(url).read())
    dest_tags = tag_config.get('dest-tags', {}).get(args.job, [])
    if dest_tags:
        with open(PROPERTIES_FILENAME, 'w') as propfile:
            propfile.write('tag = {tag}\njob = {job}\nbuild = {build}\n'
                           .format(tag=','.join(dest_tags), job=args.job,
                                   build=args.build))
        if not args.quiet:
            print 'adding build to tags', ','.join(dest_tags)
    else:
        if not args.quiet:
            print 'no tags to apply to build'


if __name__ == '__main__':
    main()
